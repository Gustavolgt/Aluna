generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "Session_userId_fkey")
}

model User {
  id            String      @id
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  active        Int         @default(0) @db.TinyInt
  plan          Int         @default(0)
  expireDate    DateTime?   @db.DateTime(0)
  Account       Account[]
  Session       Session[]
  flows         flows[]
  keywords      keywords[]
  sequences     sequences[]
}

model VerificationToken {
  id         String   @id
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model admins {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(255)
  number  String? @db.VarChar(32)
  user_id Int?
}

model clients {
  number    String    @db.VarChar(50)
  picture   String?   @db.VarChar(255)
  name      String?   @db.VarChar(255)
  join_date DateTime? @db.DateTime(0)
  tags      Json?
  recipes   Json?
  user_id   String?   @db.VarChar(50)
  id        Int       @id @default(autoincrement())
}

model cron_sequence {
  id            Int     @id @default(autoincrement())
  user_id       String? @db.VarChar(255)
  client_number String? @db.VarChar(32)
  sendAt        String? @db.VarChar(32)
  sequence_id   Int?
  flow_id       Int?
  sent          Int     @default(0) @db.TinyInt
}

model flows {
  id       Int       @id @default(autoincrement())
  nodes    Json?
  edges    Json?
  user_id  String?   @db.VarChar(255)
  folder   Int?
  name     String?   @db.VarChar(255)
  executed Int?
  created  DateTime? @db.DateTime(0)
  ctr      Int?
  User     User?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userId")

  @@index([user_id], map: "userId")
}

model keywords {
  id        Int     @id @default(autoincrement())
  name      String? @db.VarChar(255)
  condition String? @db.VarChar(255)
  flow_id   Int?
  user_id   String? @db.VarChar(255)
  active    Int?    @db.TinyInt
  runs      Int?
  User      User?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id")

  @@index([user_id], map: "user_id")
}

model messages_ctr {
  message_id String @id @db.VarChar(255)
  clicked    Json?
}

model sequences {
  id          Int     @id @default(autoincrement())
  active      Int?    @db.TinyInt
  name        String? @db.VarChar(255)
  messages    Json?
  executed    Int?
  ctr         Int?
  user_id     String? @db.VarChar(200)
  subscribers Json?
  User        User?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "id")

  @@index([user_id], map: "id")
}

model tags {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(255)
  user_id String? @db.VarChar(255)
}

model recipes {
  id         Int      @id @default(autoincrement())
  active     Boolean?
  categories Json?
  image      String?  @db.VarChar(255)
  name       String?  @db.VarChar(255)
  price      Float?   @db.Float
  slug       String?  @db.VarChar(255)
  body       String?  @db.LongText
  promo      Boolean?
}
